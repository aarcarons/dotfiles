[include]
       path = .gitconfig.local
[core]
       editor = ~/Applications/Emacs.app/Contents/MacOS/bin/emacsclient
       quotepath = false
       autocrlf = false
       excludesfile = ~/.gitignore.global
[merge]
       tool = ediff
[mergetool.ediff]
       cmd = emacs --eval \"\
       (progn\
         (defun ediff-write-merge-buffer ()\
           (let ((file ediff-merge-store-file))\
             (set-buffer ediff-buffer-C)\
             (write-region (point-min) (point-max) file)\
             (message \\\"Merge buffer saved in: %s\\\" file)\
             (set-buffer-modified-p nil)\
             (sit-for 1)))\
       (setq ediff-quit-hook 'kill-emacs\
             ediff-quit-merge-hook 'ediff-write-merge-buffer) \
       (ediff-merge-files-with-ancestor \\\"$LOCAL\\\" \\\"$REMOTE\\\"\
                                        \\\"$BASE\\\" nil \\\"$MERGED\\\"))\"
[color]
        status = auto
        diff = auto
	branch = auto
	interactive = auto
	grep = auto
[push]
        default = simple
[branch]
        autosetuprebase = always
[alias]
        a  = add
	st = status
        sh = show
        sm = submodule
        ft = fetch
	co = checkout
	br = branch
        ba = branch -a
        bn = rev-parse --abbrev-ref HEAD
        cleanup = !git branch --merged | grep  -v '\\*\\|master\\|develop' | xargs -n 1 git branch -d
        pr = pull --rebase
        me = config user.name
        mee = config user.email
        resync = "!sh -c 'branch=`git rev-parse --abbrev-ref HEAD` && git co master && git pull upstream master && git reset upstream/master --hard && git co $branch && git merge master'"
        fetch-pulls = fetch upstream +refs/pull/*:refs/remotes/pull/*
        # commit
	c  = commit
        cm = commit -m
        cam = commit -a -m
        came = commit -a --amend
        # log
        so = remote show origin
        su = remote show upstream
        sh = show
        wc = whatchanged
        lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative
        lp = log -p
        # diff
	di = diff
        dm = diff master
        dc = diff --cached
        d1 = diff HEAD~
        d2 = diff HEAD~~
        al = !git config --list | grep 'alias\\.' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\\t => \\2/' | sort
